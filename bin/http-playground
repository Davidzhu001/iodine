#!/usr/bin/env ruby

Dir.chdir(File.expand_path(File.join('..', '..'), __FILE__))
puts `rake clean`
puts `rake compile`

require 'rack/request'
require 'rack/response'
require 'rack/multipart/parser'
require 'rack'

require 'benchmark'
$LOAD_PATH.unshift File.expand_path(File.join('..', '..', 'lib'), __FILE__ )
require "bundler/setup"
require "iodine/http"

# create the server object and setup any settings we might need.
server = Iodine::Http.new
server.threads = 4
server.processes = 1
server.on_request = Proc.new do |env|
  out = "ENV:\r\n#{env.to_a.map {|h| "#{h[0]}: #{h[1]}"} .join "\n"}"
  request = Rack::Request.new(env)
  out += "\nParams:\r\n#{request.params.to_a.map {|h| "#{h[0]}: #{h[1]}"} .join "\n"}" unless(request.params.empty?)
  [200, {"Content-Length" => out.length}, [out]];
end

# server.on_start do
#   server.run_every(1000) {puts "#{server.connection_count} clients connected."}
# end

server.start

# ab -n 100000 -c 200 -k http://127.0.0.1:3000/
# ab -n 1000000 -c 20000 -k http://127.0.0.1:3000/
# ~/ruby/wrk/wrk -c400 -d10 -t12 http://localhost:3000/
# GET /assets/cases.css HTTP/1.1
# host: localhost:3000
#
#
# connection: close
